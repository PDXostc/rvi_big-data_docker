---
- name: create EC2 instance
  hosts: ec2-local
  connection: local
  vars_prompt:
    - name: ec2_region
      prompt: "EC2 region"
      default: eu-west-1
      private: no
    - name: ec2_image_id
      prompt: "EC2 Image ID, specific to region, needs to be CoreOS"
      default: ami-e38cfc94
      private: no
    - name: ec2_instance_type
      prompt: "Instance type"
      default: c3.xlarge
      private: no
    - name: ec2_key
      prompt: "SSH key name"
      private: no
    - name: admin_ip
      prompt: "Admin IP"
      default: 87.138.108.187/32
      private: no
  vars:
    - ec2_group: rvi_demo
    - instance_count: 1
    - instance_name: "RVI Big Data"
  tasks:
    - name: create security group
      local_action:
        module: ec2_group
        name: "{{ ec2_group }}"
        description: "RVI Big Data demo"
        region: "{{ ec2_region }}"
        state: present
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 9092
            to_port: 9092
            cidr_ip: "{{ admin_ip }}"
          - proto: tcp
            from_port: 2181
            to_port: 2181
            cidr_ip: "{{ admin_ip }}"
          - proto: tcp
            from_port: 9042
            to_port: 9042
            cidr_ip: "{{ admin_ip }}"
          - proto: tcp
            from_port: 9160
            to_port: 9160
            cidr_ip: "{{ admin_ip }}"
          - proto: tcp
            from_port: 9000
            to_port: 9000
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 10555
            to_port: 10555
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
    - name: create ec2 instance
      local_action:
        module: ec2
        key_name: "{{ ec2_key }}"
        group: "{{ ec2_group }}"
        instance_type: "{{ ec2_instance_type }}"
        image: "{{ ec2_image_id }}"
        region: "{{ ec2_region }}"
        wait: yes
        exact_count: "{{ instance_count }}"
        user_data: "{{ lookup('template', 'templates/rvi-cloudconfig.j2') }}"
        count_tag:
          Name: "{{ instance_name }}"
        instance_tags:
          Name: "{{ instance_name }}"
          type: coreos
        volumes:
          - device_name: /dev/xvdf
            device_type: gp2
            volume_size: 20
            delete_on_termination: true
          - device_name: /dev/xvde
            device_type: gp2
            volume_size: 10
            delete_on_termination: true
      register: ec2

    - name: Add the instance to host group
      local_action: add_host hostname={{ item.public_ip }} groupname="rvi"
      with_items: ec2.tagged_instances

    - name: Wait for SSH
      local_action: wait_for host={{ item.public_ip }} port=22 delay=5 timeout=320 state=started
      with_items: ec2.tagged_instances

- name: bootstrap
  hosts: rvi
  gather_facts: False
  roles:
    - defunctzombie.coreos-bootstrap
  tasks:
    - name: install docker-py
      pip: name=docker-py version="1.0"

- name: Fetch demo data
  hosts: rvi
  tasks:
    - name: Change permissions
      command: chown core:docker /var/lib/traces
      sudo: yes
    - name: Get data
      shell: wget -q -O - https://s3.eu-central-1.amazonaws.com/rvi-demo/compressed-data.tar | tar x -C /var/lib/traces creates=/var/lib/traces/new_abboip.txt.lz4

- name: launch rvi on ec2
  hosts: rvi
  vars_prompt:
    - name: registry_user
      prompt: "Docker Hub user name"
      private: no
    - name: registry_password
      prompt: "Docker Hub password"
      private: yes
    - name: registry_email
      prompt: "Docker Hub email"
      private: no
  vars:
    - rvi_api_uri: "{{ inventory_hostname }}"
  roles:
    - zookeeper
    - kafka
    - cassandra
    - docker-hub
    - rvi-data-ingestion
    - {role: rvi-data-feeds, data_volume: /var/lib/traces }
    - rvi-api
    - rvi-ui
